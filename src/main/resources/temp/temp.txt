/**
 * Dom4j 生成XML文档与解析XML文档
 */
public class Dom4jDemo implements XmlDocument {
    public void createXml(String fileName) {
        Document document = DocumentHelper.createDocument();
        Element employees = document.addElement("employees");
        Element employee = employees.addElement("employee");
        Element name = employee.addElement("name");
        name.setText("活这么大就没饱过");
        Element sex = employee.addElement("sex");
        sex.setText("m");
        Element age = employee.addElement("age");
        age.setText("24");
        try {
            Writer fileWriter = new FileWriter(fileName);
            XMLWriter xmlWriter = new XMLWriter(fileWriter);
            xmlWriter.write(document);
            xmlWriter.close();
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }

    public void parserXml(String fileName) {
        File inputXml = new File(fileName);
        SAXReader saxReader = new SAXReader();
        try {
            Document document = saxReader.read(inputXml);
            Element employees = document.getRootElement();
            for (Iterator i = employees.elementIterator(); i.hasNext(); ) {
                Element employee = (Element) i.next();
                for (Iterator j = employee.elementIterator(); j.hasNext(); ) {
                    Element node = (Element) j.next();
                    System.out.println(node.getName() + ":" + node.getText());
                }
            }
        } catch (DocumentException e) {
            System.out.println(e.getMessage());
        }
        System.out.println("dom4j parserXml");
    }
}
------------
@Test(enabled = false)
    public void ff2() {
        System.setProperty(key, value);
        driver = new ChromeDriver();
        driver.get("file:///Users/user/Documents/qiaojiafei/seleniumtest.html");
        driver.findElement(By.xpath("//*[@id='alert']/input")).click();

        WebDriverWait wait = new WebDriverWait(driver, 10);
        try {
            Alert alert = wait.until(new ExpectedCondition<Alert>() {
                @Override
                public Alert apply(WebDriver driver) {
                    try {
                        return driver.switchTo().alert();
                    } catch (NoAlertPresentException e) {
                        return null;
                    }
                }
            });
            alert.accept();
        } catch (NullPointerException e) {
            /* Ignore */
            System.out.println("ff2 nullpoint");
        }
    }
    
    -------------------------------
    
    
    
    <select id="resideprovince" class="ps" tabindex="1" onchange="showdistrict('residecitybox', ['resideprovince', 'residecity', 'residedist', 'residecommunity'], 4, 1, 'reside')" name="resideprovince">
<option value="">-省份-</option>
<option value="北京市" did="1">北京市</option>
<option value="天津市" did="2">天津市</option>
<option value="河北省" did="3">河北省</option>
<option value="山西省" did="4">山西省</option>
<option value="内蒙古自治区" did="5">内蒙古自治区</option>
<option value="辽宁省" did="6">辽宁省</option>
<option value="吉林省" did="7">吉林省</option>
<option value="黑龙江省" did="8">黑龙江省</option>


-------------


//用普通定位+click方式处理下拉框
 dr.findElement(By.xpath("//select[@id='resideprovince']/option[@value='浙江省']")).click();
//等待两秒，让页面刷新，显示出城市下拉框
Thread.sleep(2000);    dr.findElement(By.xpath("//select[@id='residecity']/option[@value='杭州市']")).click();

//用Select方式
Select sProvince = new Select(dr.findElement(By.xpath("//select[@id='resideprovince']")));
sProvince.selectByValue("浙江省");
Thread.sleep(2000);
Select sCity = new Select(dr.findElement(By.xpath("//select[@id='residecity']")));
        sCity.selectByValue("杭州市");
